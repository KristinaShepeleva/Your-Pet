{"version":3,"file":"static/js/973.a98913fd.chunk.js","mappings":"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","sources":["../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","webpack://your-pet/./src/components/CustomInput/CustomInput.module.css?9201","components/CustomInput/CustomInput.js","webpack://your-pet/./src/components/LoginForm/LoginForm.module.css?4ac5","components/LoginForm/LoginForm.js","webpack://your-pet/./src/pages/LoginPage/LoginPage.module.css?f8e0","pages/LoginPage/LoginPage.js","schemas/index.js"],"sourcesContent":["import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"CustomInput_input__ObazE\",\"inputError\":\"CustomInput_inputError__agYzR\",\"inputSuccess\":\"CustomInput_inputSuccess__xE1GL\",\"error\":\"CustomInput_error__hrpIn\"};","import { useField } from 'formik';\nimport PropTypes from 'prop-types';\n\nimport css from './CustomInput.module.css';\n\nconst CustomInput = ({ submitCount, isValid, ...props }) => {\n  const [field, meta] = useField(props);\n  const success = !meta.error && meta.value !== '';\n  const error = !isValid && submitCount > 0 && meta.error;\n  return (\n    <>\n      <input\n        autoComplete=\"off\"\n        {...field}\n        {...props}\n        className={`${css.input} ${error ? css.inputError : ''} ${\n          success ? css.inputSuccess : ''\n        }`}\n      />\n      {error && <div className={css.error}>{meta.error}</div>}\n    </>\n  );\n};\n\nexport default CustomInput;\n\nCustomInput.propTypes = {\n  submitCount: PropTypes.number.isRequired,\n  isValid: PropTypes.bool.isRequired,\n  name: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"LoginForm_container__YDFcb\",\"title\":\"LoginForm_title__5FilZ\",\"form\":\"LoginForm_form__gPEx5\",\"iconInput\":\"LoginForm_iconInput__+dr3j\",\"eyeIcon\":\"LoginForm_eyeIcon__UzGhv\",\"crossIcon\":\"LoginForm_crossIcon__7B-yv\",\"checkIcon\":\"LoginForm_checkIcon__8JgC+\",\"checkEmailIcon\":\"LoginForm_checkEmailIcon__SxnOy\",\"crossEmailIcon\":\"LoginForm_crossEmailIcon__zat61\",\"btn\":\"LoginForm_btn__B2KLK\",\"linkContainer\":\"LoginForm_linkContainer__tVAZX\",\"link\":\"LoginForm_link__IJw1a\"};","import { Form, Formik } from 'formik';\nimport { NavLink } from 'react-router-dom';\n\nimport css from './LoginForm.module.css';\nimport { loginSchema } from 'schemas';\nimport CustomInput from 'components/CustomInput/CustomInput';\nimport {\n  CheckIcon,\n  CrossBigIcon,\n  EyeClosedIcon,\n  EyeOpenIcon,\n} from 'helpers/icons';\nimport { useDispatch } from 'react-redux';\nimport { login } from 'redux/auth/authOperations';\nimport { useState } from 'react';\n// import { useAuth } from 'hooks';\n// import { toast } from 'react-toastify';\n// import { toast } from 'react-toastify';\n\nconst initialValues = {\n  email: '',\n  password: '',\n};\n\nconst LoginForm = () => {\n  const [showPassword, setShowPassword] = useState(false);\n\n  // const { error } = useAuth();\n  const dispatch = useDispatch();\n\n  // useEffect(() => {\n  //   const errorStatus = error.status;\n  //   if (errorStatus === 400) {\n  //     return toast.error('eqweqweq');\n  //   }\n  //   if (errorStatus === 401) {\n  //     return toast.error('231231231');\n  //   }\n  // }, [error]);\n\n  const toogleShowPassword = () => {\n    setShowPassword(!showPassword);\n  };\n\n  const onSubmit = (value, actions) => {\n    dispatch(login(value));\n    actions.resetForm();\n  };\n\n  return (\n    <div className={css.container}>\n      <h1 className={css.title}>Login</h1>\n      {/* {error.status === 400} */}\n      <Formik\n        initialValues={initialValues}\n        validationSchema={loginSchema}\n        onSubmit={onSubmit}\n      >\n        {({ isValid, submitCount, values, errors }) => {\n          const error = !isValid && submitCount > 0;\n          return (\n            <Form className={css.form}>\n              <div>\n                <div className={css.iconInput}>\n                  <CustomInput\n                    type=\"email\"\n                    name=\"email\"\n                    placeholder=\"Email\"\n                    isValid={isValid}\n                    submitCount={submitCount}\n                  />\n                  {error && errors.email && (\n                    <CrossBigIcon className={css.crossEmailIcon} />\n                  )}\n                  {!errors.email && values.email !== '' && (\n                    <CheckIcon className={css.checkEmailIcon} />\n                  )}\n                </div>\n                <div className={css.iconInput}>\n                  <CustomInput\n                    type={showPassword ? 'text' : 'password'}\n                    name=\"password\"\n                    placeholder=\"Password\"\n                    isValid={isValid}\n                    submitCount={submitCount}\n                    style={{ marginBottom: 0 }}\n                  />\n                  {error && errors.password && (\n                    <CrossBigIcon className={css.crossIcon} />\n                  )}\n                  {!errors.password && values.password !== '' && (\n                    <CheckIcon className={css.checkIcon} />\n                  )}\n                  <button\n                    type=\"button\"\n                    onClick={toogleShowPassword}\n                    className={css.eyeIcon}\n                  >\n                    {showPassword ? <EyeOpenIcon /> : <EyeClosedIcon />}\n                  </button>\n                </div>\n              </div>\n              <div>\n                <div>\n                  <button type=\"submit\" className={css.btn}>\n                    Login\n                  </button>\n                  <div className={css.linkContainer}>\n                    <p>Don't have an account? </p>\n                    <NavLink to=\"/register\" className={css.link}>\n                      Register\n                    </NavLink>\n                  </div>\n                </div>\n              </div>\n            </Form>\n          );\n        }}\n      </Formik>\n    </div>\n  );\n};\n\nexport default LoginForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"loginPage\":\"LoginPage_loginPage__eZ30b\"};","import LoginForm from 'components/LoginForm/LoginForm';\nimport React from 'react';\nimport css from './LoginPage.module.css';\n\nconst LoginPage = () => {\n  return (\n    <div className={css.loginPage}>\n      <LoginForm />\n    </div>\n  );\n};\n\nexport default LoginPage;\n","import * as yup from 'yup';\n\n\nconst passwordRules = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{6,16}$/;\n\nconst emailRegExp = /.+@.+\\..+/i;\nconst nameRegExp = /^[a-zа-яё]{2,16}$/i;\n\nexport const registerSchema = yup.object().shape({\n  username: yup.string().min(2).max(16).required('Required'),\n  email: yup\n    .string()\n    .email(emailRegExp, 'Please enter a valid email')\n    .required('Required'),\n  password: yup\n    .string()\n    .matches(\n      passwordRules,\n      'The password must have 1 uppercase letter, 1 lowercase letter and 1 number'\n    )\n    .required('Required'),\n  confirmPassword: yup\n    .string()\n    .oneOf([yup.ref('password'), null], 'Password must match')\n    .required('Required'),\n});\n\nexport const loginSchema = yup.object().shape({\n  email: yup.string().email('Please enter a valid email').required('Required'),\n  password: yup\n    .string()\n    .matches(passwordRules, 'Not valid password')\n    .required('Required'),\n});\n\nexport const userSchema = yup.object().shape({\n  // avatarURL: yup.string(),\n  avatarURL: yup.mixed(),\n\n  name: yup\n    .string()\n    .required('Required')\n    .matches(nameRegExp, 'Enter a valid Name'),\n  email: yup\n    .string()\n    .trim()\n    .required('Required')\n    .matches(emailRegExp, 'Enter a valid Email'),\n  birthday: yup.string().required('Required'),\n  phone: yup.string().required('Required'),\n  city: yup.string().required('Required'),\n});\n"],"names":["_objectWithoutProperties","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call","submitCount","isValid","props","useField","field","meta","success","error","value","autoComplete","className","css","initialValues","email","password","useState","showPassword","setShowPassword","dispatch","useDispatch","toogleShowPassword","validationSchema","loginSchema","onSubmit","actions","login","resetForm","values","errors","CustomInput","type","name","placeholder","style","marginBottom","onClick","to","passwordRules","emailRegExp","registerSchema","yup","shape","username","min","max","required","matches","confirmPassword","oneOf","userSchema","avatarURL","trim","birthday","phone","city"],"sourceRoot":""}