{"version":3,"file":"static/js/867.dc7b7e95.chunk.js","mappings":"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","sources":["webpack://your-pet/./src/components/Container/Container.module.css?9f71","components/Container/Container.js","webpack://your-pet/./src/components/Modals/CongratsModal/CongratsModal.module.css?4b82","components/Modals/CongratsModal/CongratsModal.js","webpack://your-pet/./src/components/UserForm/UserInput/UserInput.module.css?34c0","components/UserForm/UserInput/UserInput.jsx","webpack://your-pet/./src/components/UserForm/Form/UserForm.module.css?a6bf","webpack://your-pet/./src/components/UserForm/LogoutUser.module.css?7771","components/UserForm/LogoutUser.jsx","components/UserForm/Form/UserForm.jsx","pages/UserPage/UserPage.js","schemas/index.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Container_container__VVOCq\"};","import PropTypes from 'prop-types';\nimport css from './Container.module.css';\n\nfunction Container({ children }) {\n  return <div className={css.container}>{children}</div>;\n}\n\nContainer.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Container;","// extracted by mini-css-extract-plugin\nexport default {\"containet\":\"CongratsModal_containet__P1iqK\",\"title\":\"CongratsModal_title__EuaPE\",\"text\":\"CongratsModal_text__vQUPB\",\"btn\":\"CongratsModal_btn__lfqy3\",\"icon\":\"CongratsModal_icon__Kg4zq\"};","import { PawprintIcon } from 'helpers/icons';\nimport css from './CongratsModal.module.css';\n\nconst CongratsModal = ({ toggleModal }) => {\n  return (\n    <div className={css.containet}>\n      <h2 className={css.title}>Congrats</h2>\n      <p className={css.text}>Youre registration is success</p>\n      <button type=\"button\" onClick={toggleModal} className={css.btn}>\n        Go to profile\n        <PawprintIcon className={css.icon} />\n      </button>\n    </div>\n  );\n};\n\nexport default CongratsModal;\n","// extracted by mini-css-extract-plugin\nexport default {\"label\":\"UserInput_label__rwL-4\",\"labelText\":\"UserInput_labelText__dLSSN\",\"input\":\"UserInput_input__LhhAa\"};","import css from './UserInput.module.css';\n\n\nexport const UserInput = ({ text, name, type, isActive, onChange, value, error, helperText }) => {\n    return (\n        <>\n          <label className={css.label}>\n                <span className={css.labelText}>{text}:</span>\n                <input className={css.input} name={name} type={type} disabled={isActive} onChange={onChange} value={value}/>\n            </label>\n             {error ? (\n         <div>{helperText}</div>\n       ) : null}\n        </>\n    )\n}","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"UserForm_wrapper__Fxcb1\",\"EditCloseBt\":\"UserForm_EditCloseBt__xpCnf\",\"iconPhoto\":\"UserForm_iconPhoto__grX6T\",\"boxAvatar\":\"UserForm_boxAvatar__IUBDV\",\"formActiv\":\"UserForm_formActiv__HfsZ0\",\"imgAvatar\":\"UserForm_imgAvatar__nTcBs\",\"editAvatarBt\":\"UserForm_editAvatarBt__PdeD1\",\"editAvatarIcon\":\"UserForm_editAvatarIcon__nD2Xr\",\"confirmBtBox\":\"UserForm_confirmBtBox__T7Wv-\",\"textConfirm\":\"UserForm_textConfirm__1DJ7o\",\"confirmBt\":\"UserForm_confirmBt__pb05u\",\"labelInputFale\":\"UserForm_labelInputFale__a1CEk\",\"inputFile\":\"UserForm_inputFile__CHbjf\",\"formGroup\":\"UserForm_formGroup__H4Oti\",\"saveBtBox\":\"UserForm_saveBtBox__W5mzf\",\"saveBt\":\"UserForm_saveBt__Ay9Br\"};","// extracted by mini-css-extract-plugin\nexport default {\"bt\":\"LogoutUser_bt__3iWY1\"};","import { LogoutIcon } from 'helpers/icons';\nimport css from './LogoutUser.module.css';\nimport ModalContainer from 'components/Modals/ModalContainer/ModalContainer';\nimport LogoutModal from 'components/Modals/LogoutModal/LogoutModal';\nimport { logout } from 'redux/auth/authOperations';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\n\nexport const LogoutUser = () => {\n  const dispatch = useDispatch();\n\n  const [isLogoutModal, setIsLogoutModal] = useState(false);\n  const toggleLogoutModal = () => {\n    setIsLogoutModal(!isLogoutModal);\n  };\n\n  const logoutBtn = () => {\n    dispatch(logout());\n  };\n  return (\n    <>\n      <button className={css.bt} type=\"button\" onClick={toggleLogoutModal}>\n        <LogoutIcon /> Logout\n      </button>\n      {isLogoutModal && (\n        <ModalContainer toggleModal={toggleLogoutModal}>\n          <LogoutModal\n            toggleLogoutModal={toggleLogoutModal}\n            logout={logoutBtn}\n          />\n        </ModalContainer>\n      )}\n    </>\n  );\n};\n","import { useFormik } from 'formik';\nimport {\n  CameraIcon,\n  CheckIcon,\n  CrossBigIcon,\n  EditIcon,\n  PhotoDefault,\n} from 'helpers/icons';\nimport { useAuth } from 'hooks';\nimport { useState } from 'react';\nimport { userSchema } from 'schemas';\nimport { UserInput } from '../UserInput/UserInput';\nimport css from './UserForm.module.css';\nimport { LogoutUser } from 'components/UserForm/LogoutUser';\n\nexport const UserForm = () => {\n  const { user } = useAuth();\n  const [avatarURL, setAvatarURL] = useState(null);\n  const [isActive, setIsActive] = useState(true);\n  const [confirmAvatar, setConfirmAvatar] = useState(false);\n  console.log(confirmAvatar);\n  const formik = useFormik({\n    initialValues: {\n      avatarURL: '',\n      name: user.name,\n      email: user.email,\n      birthday: '2018-04-28',\n      phone: '+3809745353530',\n      city: 'Kyiv',\n    },\n    onSubmit: (values, actions) => {\n      const formData = new FormData();\n      formData.append('avatarURL', values.avatarURL);\n      formData.append('name', values.name);\n      formData.append('email', values.email);\n      formData.append('birthday', values.birthday);\n      formData.append('phone', values.phone);\n      formData.append('city', values.city);\n      setIsActive(!isActive);\n      setConfirmAvatar(false);\n      actions.resetForm();\n    },\n    validationSchema: userSchema,\n  });\n  return (\n    <div className={css.wrapper}>\n      <form  onSubmit={formik.handleSubmit}>\n        \n        <div className={isActive ? css.boxAvatar : `${css.boxAvatar} ${css.formActiv}`}>\n          {avatarURL ? (\n            <img\n              className={css.imgAvatar}\n              src={URL.createObjectURL(avatarURL)}\n              alt=\"avatar\"\n            />\n          ) : user?.avatarURL ? (\n            <img className={css.imgAvatar} src={user.avatarURL} alt=\"avatar\" />\n          ) : (\n            <PhotoDefault />\n          )}\n        </div>\n        {!isActive && confirmAvatar && (\n          <div className={css.confirmBtBox}>\n            <button\n              className={css.confirmBt}\n              type=\"button\"\n              onClick={() => setConfirmAvatar(false)}\n            >\n              {' '}\n              <CheckIcon style={{ stroke:\"#54ADFF\",}}/>\n            </button>\n            <span className={css.textConfirm}>Confirm</span>\n            <button className={css.confirmBt}\n              type=\"button\"\n              onClick={() => {\n                setConfirmAvatar(false);\n                formik.setFieldValue('avatarURL', '');\n                setAvatarURL(null);\n              }}\n            >\n              {' '}\n              <CrossBigIcon style={{ stroke:\"#F43F5E\",}} />\n            </button>\n          </div>\n        )}\n        <label className={css.labelInputFale}>\n          {!isActive && !confirmAvatar && (\n            <button\n              className={css.editAvatarBt}\n              type=\"button\"\n              onClick={() => setConfirmAvatar(true)}\n            >\n              <CameraIcon className={css.editAvatarIcon} /> Edit photo\n            </button>\n          )}\n          <input\n            className={css.inputFile}\n            name=\"avatarURL\"\n            type=\"file\"\n            disabled={isActive}\n            onChange={e => {\n              formik.setFieldValue('avatarURL', e);\n              setAvatarURL(e.target.files[0]);\n            }}\n            accept=\"image/*,.png,.jpg,.gif,.web\"\n          />\n        </label>\n        <div className={css.formGroup}>\n          <UserInput\n            text=\"Name\"\n            name=\"name\"\n            type=\"text\"\n            isActive={isActive}\n            onChange={formik.handleChange}\n            value={formik.values.name}\n            error={formik.touched.name && formik.errors.name}\n            helperText={formik.errors.name}\n          />\n          <UserInput\n            text=\"Email\"\n            name=\"email\"\n            type=\"email\"\n            isActive={isActive}\n            onChange={formik.handleChange}\n            value={formik.values.email}\n            error={formik.touched.email && formik.errors.email}\n            helperText={formik.errors.email}\n          />\n          <UserInput\n            text=\"Birthday\"\n            name=\"birthday\"\n            type=\"date\"\n            isActive={isActive}\n            onChange={formik.handleChange}\n            value={formik.values.birthday}\n            error={formik.touched.birthday && formik.errors.birthday}\n            helperText={formik.errors.birthday}\n          />\n          <UserInput\n            text=\"Phone\"\n            name=\"phone\"\n            type=\"tel\"\n            isActive={isActive}\n            onChange={formik.handleChange}\n            value={formik.values.phone}\n            error={formik.touched.phone && formik.errors.phone}\n            helperText={formik.errors.phone}\n          />\n          <UserInput\n            text=\"City\"\n            name=\"city\"\n            type=\"text\"\n            isActive={isActive}\n            onChange={formik.handleChange}\n            value={formik.values.city}\n            error={formik.touched.city && formik.errors.city}\n            helperText={formik.errors.city}\n          />\n        </div>\n        {!isActive && (<div className={css.saveBtBox}><button className={css.saveBt} type=\"submit\">Save</button></div>)}\n      </form>\n      {isActive ? (\n        <button\n          className={css.EditCloseBt}\n          type=\"button\"\n          onClick={() => setIsActive(!isActive)}\n        >\n          <EditIcon />\n        </button>\n      ) : (\n        <button\n          className={css.EditCloseBt}\n          type=\"reset\"\n          onClick={() => {\n            formik.resetForm();\n            setIsActive(!isActive);\n            setAvatarURL(null);\n            setConfirmAvatar(false);\n          }}\n        >\n          <CrossBigIcon className={css.iconPhoto} />\n        </button>\n      )}\n      {isActive && (<LogoutUser />)}\n    </div>\n  );\n};\n","import Container from 'components/Container/Container';\nimport CongratsModal from 'components/Modals/CongratsModal/CongratsModal';\nimport ModalContainer from 'components/Modals/ModalContainer/ModalContainer';\nimport { UserForm } from 'components/UserForm/Form/UserForm';\nimport { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { selectNewUser } from 'redux/auth/authSelectors';\n\nconst User = () => {\n  const isNewUser = useSelector(selectNewUser);\n\n  const [isShowModal, setIsShowModal] = useState(true);\n  const [newUser, setNewUser] = useState(isNewUser);\n  console.log(isNewUser, 'new');\n\n  const toggleModal = () => {\n    setNewUser(!newUser);\n    setIsShowModal(!isShowModal);\n  };\n\n  return (\n    <>\n      <Container>\n        <h2>UserPage</h2>\n        <UserForm />\n      </Container>\n      {newUser && (\n        <ModalContainer toggleModal={toggleModal}>\n          <CongratsModal toggleModal={toggleModal} />\n        </ModalContainer>\n      )}\n    </>\n  );\n};\n\nexport default User;\n","import * as yup from 'yup';\n\n\nconst passwordRules = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{6,16}$/;\n\nconst emailRegExp = /.+@.+\\..+/i;\nconst nameRegExp = /^[a-zа-яё]{2,16}$/i;\n\nexport const registerSchema = yup.object().shape({\n  username: yup.string().min(2).max(16).required('Required'),\n  email: yup\n    .string()\n    .email(emailRegExp, 'Please enter a valid email')\n    .required('Required'),\n  password: yup\n    .string()\n    .matches(\n      passwordRules,\n      'The password must have 1 uppercase letter, 1 lowercase letter and 1 number'\n    )\n    .required('Required'),\n  confirmPassword: yup\n    .string()\n    .oneOf([yup.ref('password'), null], 'Password must match')\n    .required('Required'),\n});\n\nexport const loginSchema = yup.object().shape({\n  email: yup.string().email('Please enter a valid email').required('Required'),\n  password: yup\n    .string()\n    .matches(passwordRules, 'Not valid password')\n    .required('Required'),\n});\n\nexport const userSchema = yup.object().shape({\n  // avatarURL: yup.string(),\n  avatarURL: yup.mixed(),\n\n  name: yup\n    .string()\n    .required('Required')\n    .matches(nameRegExp, 'Enter a valid Name'),\n  email: yup\n    .string()\n    .trim()\n    .required('Required')\n    .matches(emailRegExp, 'Enter a valid Email'),\n  birthday: yup.string().required('Required'),\n  phone: yup.string().required('Required'),\n  city: yup.string().required('Required'),\n});\n"],"names":["children","className","css","toggleModal","type","onClick","UserInput","text","name","isActive","onChange","value","error","helperText","disabled","LogoutUser","dispatch","useDispatch","useState","isLogoutModal","setIsLogoutModal","toggleLogoutModal","ModalContainer","LogoutModal","logout","UserForm","user","useAuth","avatarURL","setAvatarURL","setIsActive","confirmAvatar","setConfirmAvatar","console","log","formik","useFormik","initialValues","email","birthday","phone","city","onSubmit","values","actions","formData","FormData","append","resetForm","validationSchema","userSchema","handleSubmit","src","URL","createObjectURL","alt","style","stroke","setFieldValue","e","target","files","accept","handleChange","touched","errors","isNewUser","useSelector","selectNewUser","isShowModal","setIsShowModal","newUser","setNewUser","Container","passwordRules","emailRegExp","registerSchema","yup","shape","username","min","max","required","password","matches","confirmPassword","oneOf","loginSchema","trim"],"sourceRoot":""}