{"version":3,"file":"static/js/582.d5fd878f.chunk.js","mappings":"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","sources":["../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","webpack://your-pet/./src/components/CustomInput/CustomInput.module.css?9201","components/CustomInput/CustomInput.js","webpack://your-pet/./src/components/RegisterForm/RegisterForm.module.css?a5d4","components/RegisterForm/RegisterForm.js","webpack://your-pet/./src/pages/RegisterPage/RegisterPage.module.css?fdcb","pages/RegisterPage/RegisterPage.js","schemas/index.js"],"sourcesContent":["import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"CustomInput_input__ObazE\",\"inputError\":\"CustomInput_inputError__agYzR\",\"inputSuccess\":\"CustomInput_inputSuccess__xE1GL\",\"error\":\"CustomInput_error__hrpIn\"};","import { useField } from 'formik';\nimport PropTypes from 'prop-types';\n\nimport css from './CustomInput.module.css';\n\nconst CustomInput = ({ submitCount, isValid, ...props }) => {\n  const [field, meta] = useField(props);\n  const success = !meta.error && meta.value !== '';\n  const error = !isValid && submitCount > 0 && meta.error;\n  return (\n    <>\n      <input\n        autoComplete=\"off\"\n        {...field}\n        {...props}\n        className={`${css.input} ${error ? css.inputError : ''} ${\n          success ? css.inputSuccess : ''\n        }`}\n      />\n      {error && <div className={css.error}>{meta.error}</div>}\n    </>\n  );\n};\n\nexport default CustomInput;\n\nCustomInput.propTypes = {\n  submitCount: PropTypes.number.isRequired,\n  isValid: PropTypes.bool.isRequired,\n  name: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"RegisterForm_container__w0Atp\",\"title\":\"RegisterForm_title__EvDyW\",\"form\":\"RegisterForm_form__Tv43W\",\"iconInput\":\"RegisterForm_iconInput__n83p7\",\"eyeIcon\":\"RegisterForm_eyeIcon__PZ59+\",\"crossIcon\":\"RegisterForm_crossIcon__ggC75\",\"checkIcon\":\"RegisterForm_checkIcon__jvji-\",\"checkEmailIcon\":\"RegisterForm_checkEmailIcon__meM9n\",\"crossEmailIcon\":\"RegisterForm_crossEmailIcon__h0nmY\",\"btn\":\"RegisterForm_btn__bgTuW\",\"linkContainer\":\"RegisterForm_linkContainer__Sxc8O\",\"link\":\"RegisterForm_link__xu2eW\"};","import { Form, Formik } from 'formik';\nimport { NavLink } from 'react-router-dom';\n\nimport css from './RegisterForm.module.css';\nimport { registerSchema } from 'schemas';\nimport CustomInput from 'components/CustomInput/CustomInput';\nimport {\n  CheckIcon,\n  CrossBigIcon,\n  EyeClosedIcon,\n  EyeOpenIcon,\n} from 'helpers/icons';\nimport { useDispatch } from 'react-redux';\nimport { createUser } from 'redux/auth/authOperations';\nimport { useState } from 'react';\n\nconst initialValues = {\n  username: '',\n  email: '',\n  password: '',\n  confirmPassword: '',\n};\n\nconst RegisterForm = () => {\n  const [showPassword, setShowPassword] = useState(false);\n  const [showConfirmPassword, setShowConfirmPassword] = useState(false);\n\n  const dispatch = useDispatch();\n\n  const toogleShowPassword = () => {\n    setShowPassword(!showPassword);\n  };\n\n  const toogleShowConfirmPassword = () => {\n    setShowConfirmPassword(!showConfirmPassword);\n  };\n\n  const onSubmit = async (value, actions) => {\n    const newUser = {\n      name: value.username,\n      email: value.email,\n      password: value.password,\n    };\n    dispatch(createUser(newUser));\n    actions.resetForm();\n  };\n\n  return (\n    <div className={css.container}>\n      <h1 className={css.title}>Registration</h1>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={registerSchema}\n        onSubmit={onSubmit}\n        className={css.formik}\n      >\n        {({ isValid, submitCount, values, errors }) => {\n          const error = !isValid && submitCount > 0;\n          return (\n            <Form className={css.form}>\n              <div>\n                <div className={css.iconInput}>\n                  <CustomInput\n                    type=\"name\"\n                    name=\"username\"\n                    placeholder=\"Name\"\n                    isValid={isValid}\n                    submitCount={submitCount}\n                  />\n                  {error && errors.username && (\n                    <CrossBigIcon className={css.crossEmailIcon} />\n                  )}\n                  {!errors.username && values.username !== '' && (\n                    <CheckIcon className={css.checkEmailIcon} />\n                  )}\n                </div>\n                <div className={css.iconInput}>\n                  <CustomInput\n                    type=\"email\"\n                    name=\"email\"\n                    placeholder=\"Email\"\n                    isValid={isValid}\n                    submitCount={submitCount}\n                  />\n                  {error && errors.email && (\n                    <CrossBigIcon className={css.crossEmailIcon} />\n                  )}\n                  {!errors.email && values.email !== '' && (\n                    <CheckIcon className={css.checkEmailIcon} />\n                  )}\n                </div>\n                <div className={css.iconInput}>\n                  <CustomInput\n                    type={showPassword ? 'text' : 'password'}\n                    name=\"password\"\n                    placeholder=\"Password\"\n                    isValid={isValid}\n                    submitCount={submitCount}\n                  />\n                  {error && errors.password && (\n                    <CrossBigIcon className={css.crossIcon} />\n                  )}\n                  {!errors.password && values.password !== '' && (\n                    <CheckIcon className={css.checkIcon} />\n                  )}\n                  <button\n                    type=\"button\"\n                    onClick={toogleShowPassword}\n                    className={css.eyeIcon}\n                  >\n                    {showPassword ? <EyeOpenIcon /> : <EyeClosedIcon />}\n                  </button>\n                </div>\n                <div className={css.iconInput}>\n                  <CustomInput\n                    type={showConfirmPassword ? 'text' : 'password'}\n                    name=\"confirmPassword\"\n                    placeholder=\"Confirm password\"\n                    isValid={isValid}\n                    submitCount={submitCount}\n                    style={{ marginBottom: 0 }}\n                  />\n                  {error && errors.confirmPassword && (\n                    <CrossBigIcon className={css.crossIcon} />\n                  )}\n                  {!errors.confirmPassword && values.confirmPassword !== '' && (\n                    <CheckIcon className={css.checkIcon} />\n                  )}\n                  <button\n                    type=\"button\"\n                    onClick={toogleShowConfirmPassword}\n                    className={css.eyeIcon}\n                  >\n                    {showConfirmPassword ? <EyeOpenIcon /> : <EyeClosedIcon />}\n                  </button>\n                </div>\n              </div>\n              <div>\n                <button className={css.btn} type=\"submit\">\n                  Registration\n                </button>\n                <div className={css.linkContainer}>\n                  <p>Already have an account?</p>\n                  <NavLink to=\"/login\" className={css.link}>\n                    Login\n                  </NavLink>\n                </div>\n              </div>\n            </Form>\n          );\n        }}\n      </Formik>\n    </div>\n  );\n};\n\nexport default RegisterForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"registerPage\":\"RegisterPage_registerPage__pk1kr\"};","import RegisterForm from 'components/RegisterForm/RegisterForm';\nimport css from './RegisterPage.module.css';\nconst RegisterPage = () => {\n  return (\n    <div className={css.registerPage}>\n      <RegisterForm />\n    </div>\n  );\n};\n\nexport default RegisterPage;\n","import * as yup from 'yup';\n\nconst passwordRules = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{6,16}$/;\nconst emailRegExp = /.+@.+\\..+/i;\nconst nameRegExp = /^[a-zа-яё]{2,16}$/i;\n\nexport const registerSchema = yup.object().shape({\n  username: yup.string().min(2).max(16).required('Required'),\n  email: yup\n    .string()\n    .email(emailRegExp, 'Please enter a valid email')\n    .required('Required'),\n  password: yup\n    .string()\n    .matches(\n      passwordRules,\n      'The password must have 1 uppercase letter, 1 lowercase letter and 1 number'\n    )\n    .required('Required'),\n  confirmPassword: yup\n    .string()\n    .oneOf([yup.ref('password'), null], 'Password must match')\n    .required('Required'),\n});\n\nexport const loginSchema = yup.object().shape({\n  email: yup.string().email('Please enter a valid email').required('Required'),\n  password: yup\n    .string()\n    .matches(passwordRules, 'Not valid password')\n    .required('Required'),\n});\n\nexport const userSchema = yup.object().shape({\n  photo: yup.string(),\n  name: yup\n    .string()\n    .required('Required')\n    .matches(nameRegExp, 'Enter a valid Name'),\n  email: yup\n    .string()\n    .trim()\n    .required('Required')\n    .matches(emailRegExp, 'Enter a valid Email'),\n  birthday: yup.string().required('Required'),\n  phone: yup.string().required('Required'),\n  city: yup.string().required('Required'),\n});\n"],"names":["_objectWithoutProperties","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call","submitCount","isValid","props","useField","field","meta","success","error","value","autoComplete","className","css","initialValues","username","email","password","confirmPassword","useState","showPassword","setShowPassword","showConfirmPassword","setShowConfirmPassword","dispatch","useDispatch","toogleShowPassword","toogleShowConfirmPassword","onSubmit","actions","newUser","name","createUser","resetForm","validationSchema","registerSchema","values","errors","CustomInput","type","placeholder","onClick","style","marginBottom","to","passwordRules","emailRegExp","yup","shape","min","max","required","matches","oneOf","loginSchema","userSchema","photo","trim","birthday","phone","city"],"sourceRoot":""}